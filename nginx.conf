worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 80;  # Listen on port 80 (standard HTTP)
        server_name localhost; #This can be changed

        location / {
            # Proxy pass to your Python application
            # The port (5000 here) should match what your application uses
            proxy_pass http://localhost:5000;

            # Important proxy headers (pass along client IP, etc.)
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Optional: Serve static files directly from Nginx (if you have any)
        # location /static {
        #     root /usr/share/nginx/html;  # Or wherever your static files are
        #     expires 30d;  # Example: Cache static files for 30 days
        # }
    }
}